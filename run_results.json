{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-04-13T16:41:07.441956Z", "invocation_id": "0c1e95e7-e5b8-45cf-8df2-289a4a3b5dce", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.862345Z", "completed_at": "2025-04-13T16:41:06.892864Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:06.894042Z", "completed_at": "2025-04-13T16:41:06.894056Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03872418403625488, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.test_dbt_snowflake.stg_ventas_demo", "compiled": true, "compiled_code": "\n\nSELECT \n    O_ORDERKEY     AS order_id,\n    O_CUSTKEY      AS customer_id,\n    O_ORDERDATE    AS order_date,\n    O_TOTALPRICE   AS total_price\nFROM snowflake_sample_data.tpch_sf1.orders", "relation_name": "VENTAS.staging.stg_ventas_demo", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.857206Z", "completed_at": "2025-04-13T16:41:06.893442Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:06.894945Z", "completed_at": "2025-04-13T16:41:06.894952Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04026508331298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.test_dbt_snowflake.stg_clientes_demo", "compiled": true, "compiled_code": "\n\nSELECT\n    c_custkey AS customer_id,\n    c_name AS customer_name,\n    c_nationkey AS nation_id,\n    c_mktsegment AS market_segment\nFROM snowflake_sample_data.tpch_sf1.customer", "relation_name": "CLIENTES.staging.stg_clientes_demo", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.898698Z", "completed_at": "2025-04-13T16:41:06.914646Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:06.915384Z", "completed_at": "2025-04-13T16:41:06.915392Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01869511604309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.test_dbt_snowflake.silver_incremental_ventas", "compiled": true, "compiled_code": "\n\nSELECT\n    order_id,\n    customer_id,\n    order_date,\n    total_price\n\nFROM VENTAS.staging.stg_ventas_demo\n\n\nWHERE order_date > (SELECT MAX(order_date) FROM VENTAS.silver.silver_incremental_ventas)\n", "relation_name": "VENTAS.silver.silver_incremental_ventas", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.910406Z", "completed_at": "2025-04-13T16:41:06.916339Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:06.917606Z", "completed_at": "2025-04-13T16:41:06.917614Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008841276168823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.test_dbt_snowflake.silver_clientes_con_ordenes", "compiled": true, "compiled_code": "\n\nSELECT\n    c.customer_id,\n    c.customer_name,\n    c.market_segment,\n    COUNT(o.order_id) AS total_ordenes,\n    ROUND(SUM(o.total_price), 2) AS total_comprado,\n    MAX(o.order_date) AS ultima_compra\nFROM CLIENTES.staging.stg_clientes_demo c\nLEFT JOIN VENTAS.staging.stg_ventas_demo o\n    ON c.customer_id = o.customer_id\nGROUP BY 1, 2, 3", "relation_name": "CLIENTES.silver.silver_clientes_con_ordenes", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.940100Z", "completed_at": "2025-04-13T16:41:06.944222Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:06.944839Z", "completed_at": "2025-04-13T16:41:06.944847Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00916433334350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.test_dbt_snowflake.gold_segmentacion_clientes", "compiled": true, "compiled_code": "\n\nSELECT\n    *,\n    CASE\n        WHEN total_comprado > 100000 THEN 'Alto Valor'\n        WHEN total_comprado BETWEEN 50000 AND 100000 THEN 'Valor Medio'\n        ELSE 'Bajo Valor'\n    END AS segmento_cliente\nFROM CLIENTES.silver.silver_clientes_con_ordenes", "relation_name": "CLIENTES.gold.gold_segmentacion_clientes", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.920425Z", "completed_at": "2025-04-13T16:41:06.945630Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:06.946398Z", "completed_at": "2025-04-13T16:41:06.946406Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02802729606628418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.test_dbt_snowflake.gold_clientes_mensual", "compiled": true, "compiled_code": "\n\nWITH base AS (\n\n    SELECT\n        customer_id,\n        DATE_TRUNC('month', order_date) AS mes,\n        ROUND(SUM(total_price), 2) AS total_ventas,\n        COUNT(order_id) AS total_pedidos\n\n    FROM VENTAS.silver.silver_incremental_ventas\n    \n    \n    WHERE order_date > (SELECT MAX(mes) FROM VENTAS.gold.gold_clientes_mensual)\n    \n\n    GROUP BY 1, 2\n\n),\n\ncon_clave AS (\n    SELECT\n        customer_id,\n        mes,\n        total_ventas,\n        total_pedidos,\n        -- Generamos una clave \u00fanica para evitar duplicados\n        md5(cast(coalesce(cast(customer_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(mes as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) AS cliente_mes\n    FROM base\n)\n\nSELECT * FROM con_clave", "relation_name": "VENTAS.gold.gold_clientes_mensual", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.949366Z", "completed_at": "2025-04-13T16:41:06.977918Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:06.984054Z", "completed_at": "2025-04-13T16:41:06.984063Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03600454330444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.test_dbt_snowflake.dbt_utils_unique_combination_of_columns_gold_segmentacion_clientes_customer_id.33460a97de", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id\n    from CLIENTES.gold.gold_segmentacion_clientes\n    group by customer_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.961692Z", "completed_at": "2025-04-13T16:41:06.979131Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:06.985630Z", "completed_at": "2025-04-13T16:41:06.985637Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030415058135986328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.test_dbt_snowflake.not_null_gold_segmentacion_clientes_customer_id.b4f19c12b7", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom CLIENTES.gold.gold_segmentacion_clientes\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.979718Z", "completed_at": "2025-04-13T16:41:06.991886Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:06.993332Z", "completed_at": "2025-04-13T16:41:06.993343Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017961740493774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.test_dbt_snowflake.not_null_gold_segmentacion_clientes_segmento_cliente.e116bf7328", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect segmento_cliente\nfrom CLIENTES.gold.gold_segmentacion_clientes\nwhere segmento_cliente is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.987385Z", "completed_at": "2025-04-13T16:41:06.994858Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:07.003485Z", "completed_at": "2025-04-13T16:41:07.003494Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02508378028869629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.test_dbt_snowflake.not_null_gold_clientes_mensual_cliente_mes.cbebd881c2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cliente_mes\nfrom VENTAS.gold.gold_clientes_mensual\nwhere cliente_mes is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-13T16:41:06.995603Z", "completed_at": "2025-04-13T16:41:07.004604Z"}, {"name": "execute", "started_at": "2025-04-13T16:41:07.005206Z", "completed_at": "2025-04-13T16:41:07.005213Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012726306915283203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.test_dbt_snowflake.unique_gold_clientes_mensual_cliente_mes.1c885c2a8f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    cliente_mes as unique_field,\n    count(*) as n_records\n\nfrom VENTAS.gold.gold_clientes_mensual\nwhere cliente_mes is not null\ngroup by cliente_mes\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 1.2058537006378174, "args": {"version_check": true, "print": true, "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "strict_mode": false, "use_colors": true, "defer": false, "require_nested_cumulative_type_params": false, "source_freshness_run_project_hooks": false, "state_modified_compare_more_unrendered_values": false, "partial_parse": true, "log_path": "/home/runner/work/test_dbt_snowflake/test_dbt_snowflake/logs", "state_modified_compare_vars": false, "write_json": true, "indirect_selection": "eager", "require_explicit_package_overrides_for_builtin_materializations": true, "macro_debugging": false, "static_parser": true, "profiles_dir": "/home/runner/.dbt", "cache_selected_only": false, "favor_state": false, "empty_catalog": false, "exclude": [], "project_dir": "/home/runner/work/test_dbt_snowflake/test_dbt_snowflake", "log_file_max_bytes": 10485760, "use_colors_file": true, "invocation_command": "dbt docs generate", "which": "generate", "require_batched_execution_for_custom_microbatch_strategy": false, "send_anonymous_usage_stats": true, "vars": {}, "introspect": true, "log_format_file": "debug", "log_format": "default", "partial_parse_file_diff": true, "compile": true, "show_resource_report": false, "skip_nodes_if_on_run_start_fails": false, "printer_width": 80, "static": false, "log_level": "info", "require_yaml_configuration_for_mf_time_spines": false, "require_resource_names_without_spaces": false, "select": [], "log_level_file": "debug", "quiet": false}}